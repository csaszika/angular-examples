{
  "version": 3,
  "sources": [
    "webpack:///./src/$_lazy_route_resource lazy namespace object",
    "webpack:///./src/app/app-routing.module.ts",
    "webpack:///./src/app/app.component.html",
    "webpack:///./src/app/app.component.ts",
    "webpack:///./src/app/app.module.ts",
    "webpack:///./src/app/main/home/home.component.html",
    "webpack:///./src/app/main/home/home.component.ts",
    "webpack:///./src/app/main/main-nav/main-nav.component.html",
    "webpack:///./src/app/main/main-nav/main-nav.component.ts",
    "webpack:///./src/app/main/page-not-found/page-not-found.component.html",
    "webpack:///./src/app/main/page-not-found/page-not-found.component.ts",
    "webpack:///./src/app/main/shell/shell.component.html",
    "webpack:///./src/app/main/shell/shell.component.ts",
    "webpack:///./src/environments/environment.ts",
    "webpack:///./src/main.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "main.js",
  "sourcesContent": [
    "var map = {\n\t\"./dashboard-example/dashboard-example.module.ngfactory\": [\n\t\t\"./src/app/dashboard-example/dashboard-example.module.ngfactory.js\",\n\t\t\"dashboard-example-dashboard-example-module-ngfactory~reactive-forms-reactive-forms-examples-module-n~06ef8c25\",\n\t\t\"dashboard-example-dashboard-example-module-ngfactory\"\n\t],\n\t\"./reactive-forms/reactive-forms-examples.module.ngfactory\": [\n\t\t\"./src/app/reactive-forms/reactive-forms-examples.module.ngfactory.js\",\n\t\t\"dashboard-example-dashboard-example-module-ngfactory~reactive-forms-reactive-forms-examples-module-n~06ef8c25\",\n\t\t\"reactive-forms-reactive-forms-examples-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;",
    "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {ShellComponent} from './main/shell/shell.component';\nimport {HomeComponent} from './main/home/home.component';\nimport {PageNotFoundComponent} from './main/page-not-found/page-not-found.component';\n\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    children: [\n      { path: 'home', component: HomeComponent, data: { state: 'home' } },\n      {\n        path: 'reactive-forms',\n        loadChildren: './reactive-forms/reactive-forms-examples.module#ReactiveFormsExamplesModule'\n      },\n      {\n        path: 'dashboard-example',\n        loadChildren: './dashboard-example/dashboard-example.module#DashboardExampleModule'\n      },\n      { path: '', pathMatch: 'full', redirectTo: 'home' }\n    ]\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
    "<router-outlet></router-outlet>\n",
    "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n",
    "import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MainNavComponent} from './main/main-nav/main-nav.component';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatButtonModule, MatIconModule, MatListModule, MatSidenavModule, MatToolbarModule} from '@angular/material';\nimport {HomeComponent} from './main/home/home.component';\nimport {PageNotFoundComponent} from './main/page-not-found/page-not-found.component';\nimport {ShellComponent} from './main/shell/shell.component';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {StoreModule} from '@ngrx/store';\nimport {reducers} from './main/ngrx-core/reducers';\nimport {StoreDevtoolsModule, StoreDevtoolsOptions} from '@ngrx/store-devtools';\nimport {environment} from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainNavComponent,\n    HomeComponent,\n    PageNotFoundComponent,\n    ShellComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    // Overlay module is needed by dashboard-example module\n    OverlayModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    AppRoutingModule,\n    !environment.production ? StoreDevtoolsModule.instrument(<StoreDevtoolsOptions>{maxAge: 50}) : [],\n    StoreModule.forRoot(reducers)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
    "<p>\n  home works!\n</p>\n",
    "import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport=\"true\"\n    [attr.role]=\"isHandset ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset | async)!.matches ? 'over' : 'side'\"\n    [opened]=\"!(isHandset | async)!.matches\">\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/home']\">Home</a>\n      <a mat-list-item [routerLink]=\"['/reactive-forms']\">Reactive forms</a>\n      <a mat-list-item [routerLink]=\"['/dashboard-example']\">Ngrx dashboard</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"(isHandset | async)!.matches\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Angular examples</span>\n    </mat-toolbar>\n\n    <div [@routerTransition]=\"detectRoutingState(outlet)\">\n      <router-outlet #outlet=\"outlet\"></router-outlet>\n    </div>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>\n",
    "import {Component} from '@angular/core';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\nimport {Observable} from 'rxjs';\nimport {routerTransition} from '../animations/routing.animations';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css'],\n  animations: [routerTransition]\n})\nexport class MainNavComponent {\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(private breakpointObserver: BreakpointObserver,\n              private route: ActivatedRoute) {}\n\n  detectRoutingState(outlet) {\n    return outlet.activatedRouteData.state;\n  }\n}\n",
    "<h3>\n  Page Not Found 404\n</h3>\n",
    "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "<main-nav></main-nav>\n",
    "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.css']\n})\nexport class ShellComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n",
    "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"
  ],
  "sourceRoot": ""
}